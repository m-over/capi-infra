---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes", "namespaces"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQU5EOTF0Q3UvbFhzd0ZsNW9tS1M4S0V3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakl3T1RBNE1EZ3pPREl3V2hjTk1qTXdPVEE0TURnek9ESXdXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUowMGJhWnorSkFXUG9wNTZ0WHRVS0o0NzhvV21KVmtWOWdOajkvSFRmbVp0ZGgvZm44SgovZW8rNTZtcTA3RHF6WUhqYzRLNnVsdzAwZ3pSR2picHpPVmRiTzhrWlZHbDI0YjlVZDRSa3V4UFFoUUtTMmE5CmRpTXl3OW9RVWZFR3RsNjAxWGJESGFuazFKOXF3UW5OMTRaNUtZazl0L2pHbHNKUzhuUWZYQUhoMThiZ0twOC8KVnNXZkprb3hnYU5Jck1BZ0RWQXJZRmRKUUt6ZDFZcysvNjJoTzBkZHRIYlVlUTE2OGgwQVIwMm5vb21SL3Ewdgo0WGhBaS9GRFo3dU9RbG5rTElUYkZBM01id3Q5eUt0aTh1OUpDbk93a0syMnpIcXp3MU1pMlhEM1NqdFFjbTVTCnVnWGpvcE45b1Y1YUE4cEFGQkNGUVNub283RmtwRjJ6cXo4Q0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFCV2Vrelc0TVhNbkhyNVdraHZ3bFRiOGI1VHgxWFJNVWdmRWFjdnFhY2cKTkR2TGpXSlFSTlVtbzVaYmRzVDlGSGNsZk53d1N6eHV0YzNTMEhLdWxWUXNIN1RUbUgrSXVuaDlHdUR6d0Q4NApvSGVUby9pT1RncG51VFB0czFsZWpPMUZXeE5jbHF5UWZERkpUOWQvcytZd1l2SlVjVVZIL3NIam9WUHhBV2pWCmpweFVKSnFMUStJN1luNFl5V1cxVFg5N1MyeHBiZTMwOVV4VnlxbytYTU9WemtZWXAvMnkwNEp5eXBpTXZzYlAKakl1TkhxMlZaQnV4NGxGS3pWQUExVFFLRTJFYmlpbjJHQWpTWk44bzZqUU5aRys3YVI2YTVOSUh6TUM2NlBuWgpCODR2dDJvaHN2TitXT3pOUGVDUnBicUV4a3FMMXNjcHYwWC94TUUxTzN5aAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBblRSdHBuUDRrQlkraW5ucTFlMVFvbmp2eWhhWWxXUlgyQTJQMzhkTitabTEySDkrCmZ3bjk2ajducWFyVHNPck5nZU56Z3JxNlhEVFNETkVhTnVuTTVWMXM3eVJsVWFYYmh2MVIzaEdTN0U5Q0ZBcEwKWnIxMkl6TEQyaEJSOFFhMlhyVFZkc01kcWVUVW4yckJDYzNYaG5rcGlUMjMrTWFXd2xMeWRCOWNBZUhYeHVBcQpuejlXeFo4bVNqR0JvMGlzd0NBTlVDdGdWMGxBck4zVml6Ny9yYUU3UjEyMGR0UjVEWHJ5SFFCSFRhZWlpWkgrCnJTL2hlRUNMOFVObnU0NUNXZVFzaE5zVURjeHZDMzNJcTJMeTcwa0tjN0NRcmJiTWVyUERVeUxaY1BkS08xQnkKYmxLNkJlT2lrMzJoWGxvRHlrQVVFSVZCS2VpanNXU2tYYk9yUHdJREFRQUJBb0lCQVFDU1M2RWpQMWQ0MTRxYQpHYjFHR2xSbzdyelFSMWoxNWV5dDNta2U2bjRSSTArTVM1R3ZyZC9EWjRqMVowa2JvbGRmWWdrMEJvdTVsVnBJCm5TdVZJTjBTTW5CVzJIc0ZrYUVMTGFGTFZQVnl2b3VTMU1XNHRlWkQrVkUwRk8zOHJLOTQwVGE2RC9nQ0REY20KcUJVL0IzVmo2a3VTTVlLTW5GcmVPb3p4TGVIVXlSOE1MUFJnVWd4QldSTHJZSVdEVW01eHJRczVMZVJ4blozTwpCbCtPcnlQVkpYTmxvNWpOZmpEUUVwbGpSMktIenIrYTFZQXFEUXFTSzJwUVkwbzlENkFSTnlXKzhaeHVTanl3Cm54TjF0ZnV2Tks4bEZCRmM2OGNzY1ZUK01kN2J5dXVyYVVKUlJ5RHA4aGF5ekFuR3Rxb0Q2ZWdNODZVdVBFc2cKdldXVzFFZkJBb0dCQU1JYU5XMWFrT1QzNjFlQ0VvdjFsSllZcVUveU84RW1xWXFTN2hUeTVNYTZVSHowTWU2TgpJYjE0QU5FUnpwQTRGRGxPTHBIYnpzUFNwTE9PZkwwVzVVV1crbVBmR0xwa0s3ZFJpcnExS1dRSUVCNEdseTh1CjdwMnFRSTFNd2JZd2hkM0NMamFzOUpxTnUzZlRzRSt2N2h5Qzk0eUpCKzVhZk9UTjBnOWhwbVBmQW9HQkFNOVcKQ2hVdDJvL1RrSnRIN1pmMlMzNFZjYkRKUWJTQnZXa3lWZklsWjkvcnRWaXBYY0U3ZVRXUHZ1dHI1SGhEbG1CLwpzSFlkLzgrN2dMeGt5THFtb2l5ZkoyeUZWeTdQbTZTY2xLWVNLRDN4QTNhR01lbktwcHBHOUpBWndGcGpFODlECmZZRW9qRmN1bzFmdWJjQ3ZSN2JDOWx3WEZBSVk4U0d3WmlBR2JLU2hBb0dBRFlVdjFZY3FjcGlHVHhralc1Wm0KbkRIcGtVVUpQb0lINnp3aTAxaTc4TS9Ialh5aEFjSFk2TTYwRjl3S3JHY0xtWlpGamlsbWRLTjJqMzlNVnd1QwpPdCt5WDBTSi8ybTgxYzhiUDdnZ3d2UUEwMmFZSDFSQWtNRHNNQ3Q1anN4QWR0cnd4eVF6QVpUL3l1LzI1d1lWCkt1MUFld3lNZmVEVnRFWlY3SFpiMWJjQ2dZQnBwWnZKb3UzRmI3WTFpWGNsZ1ppQ0RJYzczN0VkT3lhNm5hMXgKajJIWWxaQjROd1RRMjI4dHZhczQ1bWNxYUxZTlFjTTJ6SjUyeVVJVnZQMFRMcWxnTjFDdFdWeE5PL2hBN3BCSAo5dVNPZTJxYVVGTEtvRG80VG9ON2tjT1R5dnhqRmk2elMyZ0hYSHBhNmVEKzE5R2c3TUwvdGJxNlB0OVBuVVRNCmVMbVBRUUtCZ0RubGRIclYzK0IzL2NjTDcrM0syaDBKZWE1bElRdEtNYkd6STdDb3hnSUFXdDNLUVBqbmxhaGMKRUpUcHVVSzIwUTNKdEdhMTZxYTMxQ0JSMTRjUkM3R2Zab1Q3WEJSTWFkeTNmc1NiQjNmQlpKWHhadDdvQlZ2Sgo5TTFDMmV5eURTTmdPUkRGeitpZDcrN0xMb2RlRGVYZzJ3Uk85WGt2YnpmZ2R6Qm1rcnBPCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQU5EOTF0Q3UvbFhzd0ZsNW9tS1M4S0V3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakl3T1RBNE1EZ3pPREl3V2hjTk1qTXdPVEE0TURnek9ESXdXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUowMGJhWnorSkFXUG9wNTZ0WHRVS0o0NzhvV21KVmtWOWdOajkvSFRmbVp0ZGgvZm44SgovZW8rNTZtcTA3RHF6WUhqYzRLNnVsdzAwZ3pSR2picHpPVmRiTzhrWlZHbDI0YjlVZDRSa3V4UFFoUUtTMmE5CmRpTXl3OW9RVWZFR3RsNjAxWGJESGFuazFKOXF3UW5OMTRaNUtZazl0L2pHbHNKUzhuUWZYQUhoMThiZ0twOC8KVnNXZkprb3hnYU5Jck1BZ0RWQXJZRmRKUUt6ZDFZcysvNjJoTzBkZHRIYlVlUTE2OGgwQVIwMm5vb21SL3Ewdgo0WGhBaS9GRFo3dU9RbG5rTElUYkZBM01id3Q5eUt0aTh1OUpDbk93a0syMnpIcXp3MU1pMlhEM1NqdFFjbTVTCnVnWGpvcE45b1Y1YUE4cEFGQkNGUVNub283RmtwRjJ6cXo4Q0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFCV2Vrelc0TVhNbkhyNVdraHZ3bFRiOGI1VHgxWFJNVWdmRWFjdnFhY2cKTkR2TGpXSlFSTlVtbzVaYmRzVDlGSGNsZk53d1N6eHV0YzNTMEhLdWxWUXNIN1RUbUgrSXVuaDlHdUR6d0Q4NApvSGVUby9pT1RncG51VFB0czFsZWpPMUZXeE5jbHF5UWZERkpUOWQvcytZd1l2SlVjVVZIL3NIam9WUHhBV2pWCmpweFVKSnFMUStJN1luNFl5V1cxVFg5N1MyeHBiZTMwOVV4VnlxbytYTU9WemtZWXAvMnkwNEp5eXBpTXZzYlAKakl1TkhxMlZaQnV4NGxGS3pWQUExVFFLRTJFYmlpbjJHQWpTWk44bzZqUU5aRys3YVI2YTVOSUh6TUM2NlBuWgpCODR2dDJvaHN2TitXT3pOUGVDUnBicUV4a3FMMXNjcHYwWC94TUUxTzN5aAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRUmxpWHJpcktYaEtHd2UzZ3dHUUNDakFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpJd09UQTRNRGd6T0RJd1doY05Nak13T1RBNE1EZ3pPREl3V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNaNUY5WTlyWHN3VkhidnpqZCtPeTZQOHhuQ1RHU3p3K1FrcnNSN2MyRQp3SlhrU3VodG1saXdlbkJ6Z0pkUjdUMEpCaEhKeFFOWGszYkxLcFI4Sk84Tk5WRzVBaUMrQ1VJNHkvM1hhRTl3CnpyakQrb2hDcElLQVdUWEpYeDdvTUZlVWpIYUt0TTdsSDN1eUZsMVVkTk00TWhVbm9oay95QTFhcFgydG4xNVoKQzVsazhldk4vaHl0VU9PMkp5TUw0MjNIUjN5aVE5UytNMGx3dnVVZi82cGU5bXRTd05hTERvT043bkJSbjl6MgpPQjhuQ01uR3E4c1NNbUwya3ZndlY2a3RpYnY5Yk8ybnRXdHR6aEdqVkZzY2Y3MzFySGZQVmduQngxUFlzc1RGCjJjbVRWV3BUQ04rMmRyNldnUTFMU2F6U0l3c2lDT29JNEdqK1owVXZ4Z3JyQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHTVhlS2Y3TFpwSnorakloUVJHVXZuSEd0aWUKejdvVUs1c2lQSktXbjJ5NVA3cVJFWUg1dmYyRHZibE03dVJVNWMwQVFGb0JkemJwUkhid1kwM1VwTWJacC92OAo0NzBON1lVY2FmZG1VYTRnMEUwVUl1bU51Y1BGWlBoekFnc05Yb2xEQkNVQ05hNFJBc0FlaHNabm15dDZwS08yCnJIejlTV0xJM08yeFdyemd1dnowRXFJQUZMRndzalI2Y1NBZVY4N2E5cEN0YXpQVGZjSCtxRDRFWUF3TlovUkwKdldEWk56WGJvcmQ2TjlHYlB1OGZTZkg0b1FQR0JoeHZqdkU2Z1drNFY5ajJSRFhJUFI3cFVBWHlhWDJaSzRPRQo4RTZXMzdXZHdaVlNUY0t4SVBiVkc1MXdTY1NKbFk5bDl4am1zd0w1ZjkrdTZMTFdnNmtQUnFIdmhSZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbWVSZldQYTE3TUZSMjc4NDNmanN1ai9NWndreGtzOFBrSks3RWUzTmhNQ1Y1RXJvCmJacFlzSHB3YzRDWFVlMDlDUVlSeWNVRFY1TjJ5eXFVZkNUdkRUVlJ1UUlndmdsQ09NdjkxMmhQY002NHcvcUkKUXFTQ2dGazF5VjhlNkRCWGxJeDJpclRPNVI5N3NoWmRWSFRUT0RJVko2SVpQOGdOV3FWOXJaOWVXUXVaWlBIcgp6ZjRjclZEanRpY2pDK050eDBkOG9rUFV2ak5KY0w3bEgvK3FYdlpyVXNEV2l3NkRqZTV3VVovYzlqZ2ZKd2pKCnhxdkxFakppOXBMNEwxZXBMWW03L1d6dHA3VnJiYzRSbzFSYkhIKzk5YXgzejFZSndjZFQyTExFeGRuSmsxVnEKVXdqZnRuYStsb0VOUzBtczBpTUxJZ2pxQ09Cby9tZEZMOFlLNndJREFRQUJBb0lCQUhNOUpIbEdKZTFveHBlNwpsaVlDcGFMQzY1bXN0TWF1NzRUZm05NU5LVDFqeWRydWpTYW1FZ3YxWkFmYUgzWm1KUEtBN1FrZTB1WGRzM05vCksxRGJoM2RvbWcza25nZ3dmcnB4WjJESzU5SWR1eFptb1dybUxpTldxb1JsQ292c3gyaWgxcEwvMm42UkdOdS8KQzV5Vzd5U0J2SDIxVVJzRi81b0ZteHRNNENYazlHOGlNS3YxVGQ3blYyT1MycjdzWHlqRE1uZEVISy9UUjhlcwpaTWFpMEYyaHNzQzhtRG9mcnFWdHl4Y0tBc1FQYndLbkFaRG1mRmc5RGRkNmlqaWtFaXdOK3NlY3orMitpUHI4ClE0a0NOendJRllLeHVOTGFHeHpTcXNPSkttaTAvVzQvbXpERlZVamlxdnROUTNwek52bE5mbHU5U2NkaGVKRmwKRXlyajFvRUNnWUVBeDhpUXlhWU03TVNuVUZ4SFdGbTFlVHpnRFRXZUdab2V6c2RhZHE0MzUyYmRHT1ZQOXRHSApqRXJKb0UrV2NMQWF5c2dCU3hFdEhHUGpWVzNnQzRCaXRyY1NrTzR0L0wxOEsxMGJPTytocFhPa3kwZG5GS1c3ClJkdEpPZjFGZXEyTVpnNzR3MFVSdUxhYnptV3orT2FaSG9TZ0drTVNKNXlUdUhYUjZicldMWHNDZ1lFQXhUSUQKaUFnUjc4UlVQb1JvVGFPa0N5eUVkcHcxSHFEZ2xxWGRlR3hiZnNjdDMySDlOZjFoOGordGhXNFN1RGErK3U0dAplQjJ0TDIyamx1T3hHYkhkdFlPQmRnVjJSMjVrOHhBdy9KcmhONzZ2S2ZYSUROd0N6OHloZmNBSDMxdU9KUGRJCndwaGRQS3JPcTRMOVNSbnZYKy9OT1dTeGY2WlBVYVNJNWNabXhWRUNnWUFYMHNQcE4rTGNyUXFpbTQ1cWE3QW4KTitvanlSd0VRNHVlN3NqTDFEU1laSHpEQmoxRjJuQ0dlemlWNUVlMVFscS9pYUFWMm9OOW1pKzJ0VFo5U0o3OAoyTkhlOUhnSlpuTVRITFF0VXUzOHM5Q1g2UGpTem55SmRQL0RhWDlLaEwxMFFoN0o4a2VOdGtEWUdPcWdLS2RqCnF6OElRcTA4aWdCWGc3MDNXTzlIVndLQmdIa01lSXA2bWJnYlJyT1J5QTFRMUpSZllYa0Y3cjI4ZCtGQ05DK0cKSkt3d1RJS0J2bFAwRkxvR1NOaE5kNFJKWnZiV1dtY1BvSTRxdVc4WW1sQnhsTzJscWtUdW1XckQ0NGdwZWtpMgpNbVpyMFU3cXAwRHRsWFJGNHlRMFN5RGJMT2lZTzd2b2wrTnozcVgrSk1sSStGNWw4QTY1TnhScTNPbjdIR1lnCllsbmhBb0dBWlZ1OGFqZFk5ZllWT3RSdEw5aUJMdFlWM0pkdHcyWnp3Ui8za3RNZThoc05TMDRLNERMTjl5SFgKNUZiU01jd0FnYVhRMXNnUzlVeXpIRWtnMVZKOTNQY3Fob3NTTXpWMTJGc1ptRmhML3RjbTB2U0VCMTN5WFpKbApoYVRwUWZGQys1VXcvN2didTkvVmw2RGthM2VuellhYXp2ZmVJUUNac1hlNjBHNGczSHc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRUmxpWHJpcktYaEtHd2UzZ3dHUUNDakFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpJd09UQTRNRGd6T0RJd1doY05Nak13T1RBNE1EZ3pPREl3V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNaNUY5WTlyWHN3VkhidnpqZCtPeTZQOHhuQ1RHU3p3K1FrcnNSN2MyRQp3SlhrU3VodG1saXdlbkJ6Z0pkUjdUMEpCaEhKeFFOWGszYkxLcFI4Sk84Tk5WRzVBaUMrQ1VJNHkvM1hhRTl3CnpyakQrb2hDcElLQVdUWEpYeDdvTUZlVWpIYUt0TTdsSDN1eUZsMVVkTk00TWhVbm9oay95QTFhcFgydG4xNVoKQzVsazhldk4vaHl0VU9PMkp5TUw0MjNIUjN5aVE5UytNMGx3dnVVZi82cGU5bXRTd05hTERvT043bkJSbjl6MgpPQjhuQ01uR3E4c1NNbUwya3ZndlY2a3RpYnY5Yk8ybnRXdHR6aEdqVkZzY2Y3MzFySGZQVmduQngxUFlzc1RGCjJjbVRWV3BUQ04rMmRyNldnUTFMU2F6U0l3c2lDT29JNEdqK1owVXZ4Z3JyQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHTVhlS2Y3TFpwSnorakloUVJHVXZuSEd0aWUKejdvVUs1c2lQSktXbjJ5NVA3cVJFWUg1dmYyRHZibE03dVJVNWMwQVFGb0JkemJwUkhid1kwM1VwTWJacC92OAo0NzBON1lVY2FmZG1VYTRnMEUwVUl1bU51Y1BGWlBoekFnc05Yb2xEQkNVQ05hNFJBc0FlaHNabm15dDZwS08yCnJIejlTV0xJM08yeFdyemd1dnowRXFJQUZMRndzalI2Y1NBZVY4N2E5cEN0YXpQVGZjSCtxRDRFWUF3TlovUkwKdldEWk56WGJvcmQ2TjlHYlB1OGZTZkg0b1FQR0JoeHZqdkU2Z1drNFY5ajJSRFhJUFI3cFVBWHlhWDJaSzRPRQo4RTZXMzdXZHdaVlNUY0t4SVBiVkc1MXdTY1NKbFk5bDl4am1zd0w1ZjkrdTZMTFdnNmtQUnFIdmhSZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUtId2lOVTBNRHg1V1ZiR2paaGNsWll3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TWpBNU1EZ3dPRE00TWpCYUZ3MHlNekE1TURnd09ETTRNakJhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRQ2I0OWN1c1FoZmZEcGFaem13T01hRTZNK0MwWVBPcEJFY2FUTFpCV2V3R1R5eQo5OGU2d0l2bmxlczN2cko1TGlYUS9VcDBSbWpwb0dWY3ZRQkgzaEdrZHIxRXlNZlArNDdBdUtva1BiMU1FMTNDCkdZaXFqY0ZUV3NMbG1IYVZGTjhISWFlOG45Rnh4SFdzd1k2djI0ajJjaVJRMFBJd2FkVWRoeGNZcXhwUURqQUcKQ0lqY3hYa0NnSGhOU2tPMGN2bkVkTVJzbXVqVzRqZHluY2hubXpaeXFLbG5ZWjNJM0R1REpKT1owSzdDWisrRwpXSElJSERFU2FCUnNTVm1teXU2a0JUZHo4VWZRTXJKZ1hUYTRuOU1DU01scWFHWlNkSmdEeS9WbXZtdE9GWUhSCkxtZU55RTFET1pqd3VaZHpFc2RVV0RSWHRORHZ1OWdsbnJsd1IwZjVBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJ3eUhYSm1ZWCt2Q2lBek5oSVl1M2gvekcwOGpCOGR5THYKRmFvZ3dPYU9UV2wrMjVvYllTbmJZVmlVSndwMHoycUdsSkxUeURxU1d0QUFMaWhESjRxeUxhRGc0NjM0QzM4eQpKSGM0TXZYQms3Qm5NK0w5Z1kwbWduYWRIekNMUFh5Y1NhWXlSelp6TEtFTExyeGxrRmZUS0hhS1B2cFM4L2VpCllQZWVQRWtVS1dGYXl0YUt1RDVtT3NvR2JNUmR5R0FncGJqanQyam53ei9BRWZ6aml3RFVjUkJ1QllncEJLc1AKY25mVFp3Yk84a1l1TUpmRXRiMjBGWHNGUnB1Z1BsMTNWenpGd1VaNUdrV0FhNWFQMmYyNHI5Y3VNc3VSUDJ2dgpST09XOHFwakYyRUR5NE82R0hmWUUzQ1Fqd2g0c0hjZXhpVGZ6RVV0cVBWWHgxVE1CalROCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbStQWExyRUlYM3c2V21jNXNEakdoT2pQZ3RHRHpxUVJIR2t5MlFWbnNCazhzdmZICnVzQ0w1NVhyTjc2eWVTNGwwUDFLZEVabzZhQmxYTDBBUjk0UnBIYTlSTWpIei91T3dMaXFKRDI5VEJOZHdobUkKcW8zQlUxckM1WmgybFJUZkJ5R252Si9SY2NSMXJNR09yOXVJOW5Ja1VORHlNR25WSFljWEdLc2FVQTR3QmdpSQozTVY1QW9CNFRVcER0SEw1eEhURWJKcm8xdUkzY3AzSVo1czJjcWlwWjJHZHlOdzdneVNUbWRDdXdtZnZobGh5CkNCd3hFbWdVYkVsWnBzcnVwQVUzYy9GSDBES3lZRjAydUovVEFrakphbWhtVW5TWUE4djFacjVyVGhXQjBTNW4KamNoTlF6bVk4TG1YY3hMSFZGZzBWN1RRNzd2WUpaNjVjRWRIK1FJREFRQUJBb0lCQUFwd0F1UlpiaG9XazBHaQpUN2FBMXFubmZKMWhzZFdRSHFVc1ZmODU0V3RsQlM5bWI3VU5WMUMyTlAyU2d4aWlBbDR2MTJCWnBvU2QvS3RzCjdDdmpyb0s0Z0l1dWRkSnpJV2U5OVlaZnErRUFHdkw0Q3JLQXMwVUZlcThzdWlQWk5lV2dWejdGNUp3ZGIxT1YKMGh2c013dHRNUWxJTkM4UnB2ZEhLRUM2bEJSd0EvNWlsakdnL3haMjRFai95ZTBhalJqdVVENy9EM1BBTlFPZApYY2lCaVNjT3ZIdkpjNGdMWDJyckh2d2NlY0xYQjdzK1BLNVRhRnozNmY2Y2w4VVZyRnJPTEJGUkYzL0N2bVJlCmJUOG5va2hOV1JJQmxzNGNVUlVGcGozSi9vT2s3RkNJWkdZMzNuakVlckRqK3lnWTdNcTBTUEJEN3JNOGU4QngKRXBPUkV4RUNnWUVBeFpzRjY3ZllTdTk2MmNMRXRZbXc2UWFlb2FDNHpJbHJmdWpKRThpd3BJWEU0VStaKzNCMwp4T2xRRHpDVUVEaHVmSVZoYlNINFRiZk9kNmFvV1FlZE5tM3pIR3NESGFNeGNmc29EZEc1TXdoRTdlSWF6dENRCjU0a1E5d0V0WW5YemluZFh6OFJBc2xtZklqeEU0TjFpMEgwTm9xd2VXcXpqMWdvSFg0NjZpME1DZ1lFQXlmVUMKMEQwQ200Mm9IUWdSSzJid0pKdVEvZGs1dG1SYWNIQjlITk02d0JqRXhXRHhjaTlpWlBjSEM4Nk1VZ2tjaVlIbQpkR244U3ZJSmRFQ3hxbW1uYzVNSkVmYXBDcDg0NWw1a2NEZ1BZVFNjWmJpd0JpT3BaVUlZMlZNZDkvSk5YOUFjCngvRHoySHZBRVJ5ZEZSZXFpNFBxNlNaSlIyZEwwTkJtWnVtQkpoTUNnWUJLcUtTWEI3SHZ0Z1ZyYXZ3WlBybVoKZ1VmRDkwNTY4Tnl0YVZRM1psYmZBaTk5bFM2dllqSE9Ndnh0a01RUVVOSGx1QnMwT1dad0xxY1NhK1FsSnd4TgorVUttRlFScldUSWdSMjA5czJST2xLdytXSFFhZVpDVitpSnZ3SUVlTjBSWnAzZUU1emd1YWxBR2hsRGJ5S2xCCjdrMk5qWXcyWkNYOHczTS90bFJpc3dLQmdIRWtuc3JqSTA3YWNkQ3g4RXlNZ3dVL1VsK2xEendyeEs4eGxpWk0KQUtJV1BrY0dKTDUvNVhRRElTTndPQlRObmZzN2wweXBBL3RJMWhzWEUzSVJkd3E4MlZ3REFIays4clc5TkMvYQplR05SQWozSzFuTGFEOUQyMHMwT1Q3L1ZNNXYyRCtuRUNCakVXN282ZVphVGg2eFozNFYzT1o2VE5GcHNKcktKCkp4MlpBb0dCQUttWE1peXVxeUFiYk1ST29na3RLSFhQYzdyYkd3Q014SnkwT0JQWW1BTFFseGo3aDFxaVlzTEcKUzZyVG9nUzZTWitYbjBBV1hSSWFCa0QzWnZJVVEwVXZ1M01jNThFcSs1VC9qbjJ1YytkU1NnVnZpVFNkdTVBUgpibWdONUFTQSt3emxPUlhJb0lobHNadVpoTGpON2pkdE4wamRUcHd2QmVoVHdiRGZhQnRnCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUtId2lOVTBNRHg1V1ZiR2paaGNsWll3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TWpBNU1EZ3dPRE00TWpCYUZ3MHlNekE1TURnd09ETTRNakJhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRQ2I0OWN1c1FoZmZEcGFaem13T01hRTZNK0MwWVBPcEJFY2FUTFpCV2V3R1R5eQo5OGU2d0l2bmxlczN2cko1TGlYUS9VcDBSbWpwb0dWY3ZRQkgzaEdrZHIxRXlNZlArNDdBdUtva1BiMU1FMTNDCkdZaXFqY0ZUV3NMbG1IYVZGTjhISWFlOG45Rnh4SFdzd1k2djI0ajJjaVJRMFBJd2FkVWRoeGNZcXhwUURqQUcKQ0lqY3hYa0NnSGhOU2tPMGN2bkVkTVJzbXVqVzRqZHluY2hubXpaeXFLbG5ZWjNJM0R1REpKT1owSzdDWisrRwpXSElJSERFU2FCUnNTVm1teXU2a0JUZHo4VWZRTXJKZ1hUYTRuOU1DU01scWFHWlNkSmdEeS9WbXZtdE9GWUhSCkxtZU55RTFET1pqd3VaZHpFc2RVV0RSWHRORHZ1OWdsbnJsd1IwZjVBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJ3eUhYSm1ZWCt2Q2lBek5oSVl1M2gvekcwOGpCOGR5THYKRmFvZ3dPYU9UV2wrMjVvYllTbmJZVmlVSndwMHoycUdsSkxUeURxU1d0QUFMaWhESjRxeUxhRGc0NjM0QzM4eQpKSGM0TXZYQms3Qm5NK0w5Z1kwbWduYWRIekNMUFh5Y1NhWXlSelp6TEtFTExyeGxrRmZUS0hhS1B2cFM4L2VpCllQZWVQRWtVS1dGYXl0YUt1RDVtT3NvR2JNUmR5R0FncGJqanQyam53ei9BRWZ6aml3RFVjUkJ1QllncEJLc1AKY25mVFp3Yk84a1l1TUpmRXRiMjBGWHNGUnB1Z1BsMTNWenpGd1VaNUdrV0FhNWFQMmYyNHI5Y3VNc3VSUDJ2dgpST09XOHFwakYyRUR5NE82R0hmWUUzQ1Fqd2g0c0hjZXhpVGZ6RVV0cVBWWHgxVE1CalROCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.12.0
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.12.0
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      issuer:
        clockSkewAllowance: 20s
        externalCA: false
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMjA5MDgwODM4MDlaFw0yMzA5MDgwODM4MjlaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAELHDRKVNM7g5Zphpf4/7fcGmO2TR8dhO2JAn4R+lsJ2F7IQ0xOqx2oo4eCMpP
            qxbDBLjuqKNMtYjkAyeFvJsq+aNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBSOdQZjCkQKY1+ohp6NeieSQ2IcLjAKBggqhkjOPQQDAgNJADBGAiEA2vNTtkmz
            ziGwjNVXE1pfys5oshN4YfN01Zt2gCoeH5kCIQCb2WyHRhYej/gcyokP+dqT0q64
            W4NcS7cG1OJZKuQyYQ==
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMjA5MDgwODM4MDlaFw0yMzA5MDgwODM4MjlaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAELHDRKVNM7g5Zphpf4/7fcGmO2TR8dhO2JAn4R+lsJ2F7IQ0xOqx2oo4eCMpP
      qxbDBLjuqKNMtYjkAyeFvJsq+aNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBSOdQZjCkQKY1+ohp6NeieSQ2IcLjAKBggqhkjOPQQDAgNJADBGAiEA2vNTtkmz
      ziGwjNVXE1pfys5oshN4YfN01Zt2gCoeH5kCIQCb2WyHRhYej/gcyokP+dqT0q64
      W4NcS7cG1OJZKuQyYQ==
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.12.0
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: stable-2.12.0
      inboundConnectTimeout: 100ms
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.0.0
      iptablesMode: legacy
      logFormat: ""
      logLevel: ""
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNakE1TURnd09ETTRNRGxhRncweU16QTVNRGd3T0RNNE1qbGFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVMSERSS1ZOTTdnNVpwaHBmNC83ZmNHbU8yVFI4ZGhPMkpBbjRSK2xzSjJGN0lRMHhPcXgyb280ZUNNcFAKcXhiREJManVxS05NdFlqa0F5ZUZ2SnNxK2FOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCU09kUVpqQ2tRS1kxK29ocDZOZWllU1EySWNMakFLQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBMnZOVHRrbXoKemlHd2pOVlhFMXBmeXM1b3NoTjRZZk4wMVp0MmdDb2VINWtDSVFDYjJXeUhSaFllai9nY3lva1ArZHFUMHE2NApXNE5jUzdjRzFPSlpLdVF5WVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUpTSTRDSzRUZFpobGFMc1BkTVNaWVBDTlJuQStCT0Q0d3VTR2o4TFZwdGpvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFTEhEUktWTk03ZzVacGhwZjQvN2ZjR21PMlRSOGRoTzJKQW40Uitsc0oyRjdJUTB4T3F4MgpvbzRlQ01wUHF4YkRCTGp1cUtOTXRZamtBeWVGdkpzcStRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
data:
  ca-bundle.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMjA5MDgwODM4MDlaFw0yMzA5MDgwODM4MjlaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAELHDRKVNM7g5Zphpf4/7fcGmO2TR8dhO2JAn4R+lsJ2F7IQ0xOqx2oo4eCMpP
    qxbDBLjuqKNMtYjkAyeFvJsq+aNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBSOdQZjCkQKY1+ohp6NeieSQ2IcLjAKBggqhkjOPQQDAgNJADBGAiEA2vNTtkmz
    ziGwjNVXE1pfys5oshN4YfN01Zt2gCoeH5kCIQCb2WyHRhYej/gcyokP+dqT0q64
    W4NcS7cG1OJZKuQyYQ==
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.0
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.0
        linkerd.io/proxy-version: stable-2.12.0
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: bb9accfd9e9efe23afdc2206f7b56ba7f3673b1096976659d5b710673cb72757
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.0
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.0
        linkerd.io/proxy-version: stable-2.12.0
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: bb9accfd9e9efe23afdc2206f7b56ba7f3673b1096976659d5b710673cb72757
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 10
        resources:
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.0
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  concurrencyPolicy: Replace
  schedule: "48 08 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.12.0
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.12.0
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              runAsUser: 2103
              allowPrivilegeEscalation: false
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.0
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.0
        linkerd.io/proxy-version: stable-2.12.0
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: bb9accfd9e9efe23afdc2206f7b56ba7f3673b1096976659d5b710673cb72757
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "4567,4568"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaVRDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNakE1TURnd09ETTRNRGxhRncweU16QTVNRGd3T0RNNE1qbGFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFTEhEUktWTk03ZzVacGhwZjQvN2ZjR21PMlRSOGRoTzJKQW40Uitsc0oyRjdJUTB4T3F4Mm9vNGVDTXBQCiAgICAgICAgcXhiREJManVxS05NdFlqa0F5ZUZ2SnNxK2FOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlNPZFFaakNrUUtZMStvaHA2TmVpZVNRMkljTGpBS0JnZ3Foa2pPUFFRREFnTkpBREJHQWlFQTJ2TlR0a216CiAgICAgICAgemlHd2pOVlhFMXBmeXM1b3NoTjRZZk4wMVp0MmdDb2VINWtDSVFDYjJXeUhSaFllai9nY3lva1ArZHFUMHE2NAogICAgICAgIFc0TmNTN2NHMU9KWkt1UXlZUT09CiAgICAgICAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQogICAgICBrZXlQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIEVDIFBSSVZBVEUgS0VZLS0tLS0KICAgICAgICBNSGNDQVFFRUlKU0k0Q0s0VGRaaGxhTHNQZE1TWllQQ05SbkErQk9ENHd1U0dqOExWcHRqb0FvR0NDcUdTTTQ5CiAgICAgICAgQXdFSG9VUURRZ0FFTEhEUktWTk03ZzVacGhwZjQvN2ZjR21PMlRSOGRoTzJKQW40Uitsc0oyRjdJUTB4T3F4MgogICAgICAgIG9vNGVDTXBQcXhiREJManVxS05NdFlqa0F5ZUZ2SnNxK1E9PQogICAgICAgIC0tLS0tRU5EIEVDIFBSSVZBVEUgS0VZLS0tLS0KaWRlbnRpdHlUcnVzdEFuY2hvcnNQRU06IHwKICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICBNSUlCaVRDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNakE1TURnd09ETTRNRGxhRncweU16QTVNRGd3T0RNNE1qbGFNQnd4R2pBWQogIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICBRZ0FFTEhEUktWTk03ZzVacGhwZjQvN2ZjR21PMlRSOGRoTzJKQW40Uitsc0oyRjdJUTB4T3F4Mm9vNGVDTXBQCiAgcXhiREJManVxS05NdFlqa0F5ZUZ2SnNxK2FOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICBCQlNPZFFaakNrUUtZMStvaHA2TmVpZVNRMkljTGpBS0JnZ3Foa2pPUFFRREFnTkpBREJHQWlFQTJ2TlR0a216CiAgemlHd2pOVlhFMXBmeXM1b3NoTjRZZk4wMVp0MmdDb2VINWtDSVFDYjJXeUhSaFllai9nY3lva1ArZHFUMHE2NAogIFc0TmNTN2NHMU9KWkt1UXlZUT09CiAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
